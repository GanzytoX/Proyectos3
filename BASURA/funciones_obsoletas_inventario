# Botón de agregar producto
        #self.agregar_button = tk.Button(button_frame, text="Agregar Producto", bg=c_azul, fg=c_blanco, command=self.agregar_producto)
        #self.agregar_button.pack(side=tk.LEFT, padx=5)

        # Botón de eliminar producto
        #self.eliminar_button = tk.Button(button_frame, text="Eliminar Producto", bg=c_rojo, fg=c_blanco, command=self.eliminar_producto)
        #self.eliminar_button.pack(side=tk.LEFT, padx=5)

#def agregar_producto(self):
   #    nuevo_id_producto = simpledialog.askstring("Agregar Producto", "Ingrese el nuevo ID del producto:")
   #    nuevo_nombre_producto = simpledialog.askstring("Agregar Producto", "Ingrese el nombre del nuevo producto:")
   #    nueva_unidad = simpledialog.askstring("Agregar Producto", "Ingrese la nueva unidad del producto:")
   #    nueva_cantidad = simpledialog.askinteger("Agregar Producto", "Ingrese la cantidad inicial del producto:")

   #    if nuevo_id_producto and nuevo_nombre_producto and nueva_unidad and nueva_cantidad is not None:
   #        # Verificar si el ID del producto ya existe en la base de datos
   #        cursor = self.connection.cursor()
   #        cursor.execute("SELECT id_producto FROM inventario WHERE id_producto = %s", (nuevo_id_producto,))
   #        existing_id = cursor.fetchone()

   #        if existing_id:
   #            tk.messagebox.showerror("Error", f"El ID {nuevo_id_producto} ya existe en la base de datos.")
   #        else:
   #            # Insertar el nuevo producto en la base de datos
   #            cursor.execute("INSERT INTO inventario (id_producto, nombre_producto, unidad, cantidad) VALUES (%s, %s, %s, %s)",
   #                        (nuevo_id_producto, nuevo_nombre_producto, nueva_unidad, nueva_cantidad))
   #            self.connection.commit()

   #            self.obtener_datos_de_bd()

    #def eliminar_producto(self):
    #    # Obtener la fila seleccionada
    #    selected_item = self.tree.selection()
    #    if not selected_item:
    #        return  # No hay ninguna fila seleccionada
#
    #    # Obtener el ID del producto seleccionado
    #    id_producto = self.tree.item(selected_item, 'values')[0]
#
    #    # Mostrar un cuadro de diálogo de confirmación antes de eliminar
    #    confirmacion = tk.messagebox.askyesno("Confirmar Eliminación", f"¿Estás seguro de eliminar el producto con ID {id_producto}?")
#
    #    if confirmacion:
    #        # Eliminar el producto de la base de datos
    #        cursor = self.connection.cursor()
    #        cursor.execute("DELETE FROM inventario WHERE id_producto = %s", (id_producto,))
    #        self.connection.commit()
#
    #        # Eliminar la fila de la tabla en la interfaz gráfica
    #        self.tree.delete(selected_item)